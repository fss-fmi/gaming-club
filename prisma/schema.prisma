// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

model Users {
  // Login information
  id           String  @id @default(uuid())
  email        String? @unique
  passwordHash String? @map("password_hash")

  // Personal information
  firstName String? @map("first_name")
  lastName  String? @map("last_name")
  nickname  String?

  // CS2 Team
  cs2TeamId          Int?                @map("cs2_team_id")
  cs2Team            Cs2Teams?           @relation(name: "CS2TeamMembers", fields: [cs2TeamId], references: [id], onDelete: SetNull)
  cs2TeamCaptain     Cs2Teams?           @relation(name: "CS2TeamCaptain")
  cs2TeamInvitations Cs2TeamInvitation[] // The teams the user was invited to join
  cs2TeamRequests    Cs2TeamRequest[] // The teams the user requested to join

  // Row timestamps
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz()
}

model Cs2Teams {
  // Primary key
  id Int @id @default(autoincrement())

  // Team information
  name  String
  color Color

  // Team members
  members Users[] @relation("CS2TeamMembers")

  // Team captain
  capitanId String? @unique @map("capitan_id")
  capitan   Users?  @relation("CS2TeamCaptain", fields: [capitanId], references: [id], onDelete: Restrict)

  // Team invitations (invitations, send to players, from team capitans, asking them to join)
  teamInvitations Cs2TeamInvitation[]

  // Team requests (invitations, send to teams, from players, asking them to join)
  teamRequests Cs2TeamRequest[]

  // Row timestamps
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz()
}

model Cs2TeamInvitation {
  // Primary key
  id Int @id @default(autoincrement())

  // Team relation
  cs2TeamId Int      @map("cs2_team_id")
  cs2Team   Cs2Teams @relation(fields: [cs2TeamId], references: [id], onDelete: Cascade)

  // User relation
  userId String @map("user_id")
  user   Users  @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Row timestamps
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz

  @@map("cs2_teams_invitations")
}

model Cs2TeamRequest {
  // Primary key
  id Int @id @default(autoincrement())

  // Team relation
  cs2TeamId Int      @map("cs2_team_id")
  cs2Team   Cs2Teams @relation(fields: [cs2TeamId], references: [id], onDelete: Cascade)

  // User relation
  userId String @map("user_id")
  user   Users  @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Row timestamps
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz

  @@map("cs2_team_requests")
}

enum Color {
  RED
  ORANGE
  YELLOW
  GREEN
  BLUE
  PURPLE
  PINK
  BROWN
  NAVY
  VIOLET
  CYAN
  MAGENTA
  LIME
  TEAL
  INDIGO
  CORAL
}
